{"version":3,"file":"static/webpack/static/development/pages/_app.js.0d5bc777067a4434b6b8.hot-update.js","sources":["webpack:///./sagas/post.js"],"sourcesContent":["import axios from 'axios';\nimport { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport { \n    ADD_POST_REQUEST,\n    ADD_POST_FAILURE,\n    ADD_POST_SUCCESS,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_SUCCESS,\n    LOAD_MAIN_POSTS_REQUEST,\n    LOAD_MAIN_POSTS_SUCCESS,\n    LOAD_MAIN_POSTS_FAILURE,\n    LOAD_USER_POSTS_REQUEST,\n    LOAD_HASHTAG_POSTS_REQUEST,\n    LOAD_USER_POSTS_SUCCESS,\n    LOAD_USER_POSTS_FAILURE,\n    LOAD_HASHTAG_POSTS_SUCCESS,\n    LOAD_HASHTAG_POSTS_FAILURE,\n } from '../reducers/post';\n\nfunction addPostAPI(data){\n    return axios.post('/post', data, {\n        withCredentials: true,\n    });\n}\n\nfunction addCommentAPI(data){\n    return axios.post('/post/comment', data, {\n        withCredentials: true,\n    });\n}\n\nfunction loadMainPostsAPI(){\n    return axios.get('/posts');\n}\n\nfunction loadUserPostsAPI(id){\n    return axios.get(`/user/${id}/posts`);\n}\n\nfunction loadHashtagPostsAPI(tag){\n    return axios.get(`/hashtag/${tag}`);\n}\n\nfunction* addPost(action){\n    try {\n        const result = yield call(addPostAPI, action.data);\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* addComment(action){ \n    try {\n        yield call(addCommentAPI, action.data);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                comment: action.data.comment\n            },\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* loadMainPosts(){\n    try {\n        const result = yield call(loadMainPostsAPI);\n        yield put({\n            type: LOAD_MAIN_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* loadUserPosts(action){\n    try {\n        const result = yield call(loadUserPostsAPI, action.data);\n        yield put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_USER_POSTS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* loadHashtagPosts(action){\n    try {\n        const result = yield call(loadHashtagPostsAPI, action.data);\n        yield put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST, addPost)\n}\n\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\nfunction* watchLoadMainPosts(){\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts)\n}\n\nfunction* watchLoadUserPosts(){\n    yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts)\n}\n\nfunction* watchLoadHashtagPosts(){\n    yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts)\n}\n\nexport default function* postSaga(){\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n        fork(watchLoadMainPosts),\n        fork(watchLoadUserPosts),\n        fork(watchLoadHashtagPosts),\n    ]);\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA4CA;;;AAgBA;;;AAkBA;;;AAgBA;;;AAgBA;;;AAgBA;;;AAIA;;;AAIA;;;AAIA;;;AAIA;;;AAIA;AACA;AAnJA;AACA;AACA;AACA;AAiBA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AARA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AAVA;AAWA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AARA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AARA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAEA;AAFA;AAGA;AACA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AARA;AASA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}