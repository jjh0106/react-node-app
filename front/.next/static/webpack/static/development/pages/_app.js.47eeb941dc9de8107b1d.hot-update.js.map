{"version":3,"file":"static/webpack/static/development/pages/_app.js.47eeb941dc9de8107b1d.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\n\nconst JsnBird = ({ Component, store, pageProps }) => {\n    return (\n        <Provider store={store}>\n            <Head>\n                <title>JsnBird</title>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.19.0/antd.css\" />\n                <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\n            </Head>\n            <AppLayout> {/* props로 하위 jsx를 전달 */}\n                <Component {...pageProps} />\n            </AppLayout>                \n        </Provider>\n    );\n};\n\nJsnBird.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    store: PropTypes.object.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nJsnBird.getInitialProps = async (context) => {\n    const { ctx, Component } = context;\n    let pageProps = {};\n    const state = ctx.store.getState();\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n\n    axios.defaults.headers.Cookie = '';\n\n    if(ctx.isServer && cookie){\n        axios.defaults.headers.Cookie = cookie;\n    }\n\n    if( !state.user.me ){\n        ctx.store.dispatch({\n            type: LOAD_USER_REQUEST,\n        })\n    }\n\n    if( Component.getInitialProps ){\n        pageProps = await Component.getInitialProps(ctx) || {};\n    }\n    \n    return { pageProps };\n};\n\nconst configureStore = (initialState, options) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production' \n        ? compose(applyMiddleware(...middlewares))\n        : compose(\n            applyMiddleware(...middlewares),\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n        ); \n    const store = createStore(reducer, initialState, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(JsnBird));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAjBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAmBA;AACA;AApBA;AAAA;AAsBA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}