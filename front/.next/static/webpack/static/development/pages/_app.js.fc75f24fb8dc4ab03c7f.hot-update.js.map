{"version":3,"file":"static/webpack/static/development/pages/_app.js.fc75f24fb8dc4ab03c7f.hot-update.js","sources":["webpack:///./sagas/post.js"],"sourcesContent":["import axios from 'axios';\nimport { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport { \n    ADD_POST_REQUEST,\n    ADD_POST_FAILURE,\n    ADD_POST_SUCCESS,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_SUCCESS,\n    LOAD_MAIN_POSTS_REQUEST,\n    LOAD_MAIN_POSTS_SUCCESS,\n    LOAD_MAIN_POSTS_FAILURE,\n    LOAD_USER_POSTS_REQUEST,\n    LOAD_HASHTAG_POSTS_REQUEST,\n    LOAD_USER_POSTS_SUCCESS,\n    LOAD_USER_POSTS_FAILURE,\n    LOAD_HASHTAG_POSTS_SUCCESS,\n    LOAD_HASHTAG_POSTS_FAILURE,\n    LOAD_COMMENTS_REQUEST,\n    LOAD_COMMENTS_SUCCESS,\n    LOAD_COMMENTS_FAILURE,\n    UPLOAD_IMAGES_REQUEST,\n    UPLOAD_IMAGES_SUCCESS,\n    UPLOAD_IMAGES_FAILURE,\n    LIKE_POST_REQUEST,\n    LIKE_POST_SUCCESS,\n    LIKE_POST_FAILURE,\n    UNLIKE_POST_REQUEST,\n    UNLIKE_POST_FAILURE,\n    UNLIKE_POST_SUCCESS,\n    RETWEET_REQUEST,\n    RETWEET_SUCCESS,\n    RETWEET_FAILURE,\n } from '../reducers/post';\n\n import { ADD_POST_TO_ME } from '../reducers/user';\n\n//////////////////////////////////////////// add post ////////////////////////////////////////////\nfunction addPostAPI(data){\n    return axios.post('/post', data, {\n        withCredentials: true,\n    });\n}\n\nfunction* addPost(action){\n    try {\n        const result = yield call(addPostAPI, action.data);\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: result.data,\n        });\n        yield put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id,\n        })\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchAddPost(){\n    yield takeLatest(ADD_POST_REQUEST, addPost)\n}\n\n//////////////////////////////////////////// add comment ////////////////////////////////////////////\n// data -> action.data.content & action.data.postId\nfunction addCommentAPI(data){\n    return axios.post(`/post/${data.postId}/comment`, { content: data.content }, {\n        withCredentials: true,\n    });\n}\n\nfunction* addComment(action){ \n    try {\n        const result = yield call(addCommentAPI, action.data);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n                postId: action.data.postId,\n                comment: result.data\n            },\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchAddComment(){\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment)\n}\n\n\n//////////////////////////////////////////// load comment ////////////////////////////////////////////\nfunction loadCommentsAPI(postId){\n    return axios.get(`/post/${postId}/comments`);\n}\n\nfunction* loadComments(action){\n    try {\n        const result = yield call(loadCommentsAPI, action.data);\n        yield put({\n            type: LOAD_COMMENTS_SUCCESS,\n            data: {\n                postId: action.data,\n                comments: result.data,\n            }\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_COMMENTS_FAILURE,\n            error: e,\n        })\n    }\n}\n\nfunction* watchLoadComments(){\n    yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments)\n}\n\n//////////////////////////////////////////// load main posts ////////////////////////////////////////////\nfunction loadMainPostsAPI(){\n    return axios.get('/posts');\n}\n\nfunction* loadMainPosts(){\n    try {\n        const result = yield call(loadMainPostsAPI);\n        yield put({\n            type: LOAD_MAIN_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadMainPosts(){\n    yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts)\n}\n\n//////////////////////////////////////////// load user posts ////////////////////////////////////////////\nfunction loadUserPostsAPI(id){\n    return axios.get(`/user/${id || 0}/posts`);\n}\n\nfunction* loadUserPosts(action){\n    try {\n        const result = yield call(loadUserPostsAPI, action.data);\n        yield put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_USER_POSTS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadUserPosts(){\n    yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts)\n}\n\n//////////////////////////////////////////// load hashtag posts ////////////////////////////////////////////\nfunction loadHashtagPostsAPI(tag){\n    return axios.get(`/hashtag/${encodeURIComponent(tag)}`);\n}\n\nfunction* loadHashtagPosts(action){\n    try {\n        const result = yield call(loadHashtagPostsAPI, action.data);\n        yield put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadHashtagPosts(){\n    yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts)\n}\n\n//////////////////////////////////////////// upload images ////////////////////////////////////////////\nfunction uploadImagesAPI(formData){\n    return axios.post('/post/images', formData, {\n        withCredentials: true,\n    });\n}\n\nfunction* uploadImages(action){\n    try {\n        const result = yield call(uploadImagesAPI, action.data);\n        yield put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchUploadImages(){\n    yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages)\n}\n\n//////////////////////////////////////////// like post ////////////////////////////////////////////\nfunction likePostAPI(postId){\n    return axios.post(`/post/${postId}/like`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* likePost(action){\n    try {\n        const result = yield call(likePostAPI, action.data);\n        yield put({\n            type: LIKE_POST_SUCCESS,\n            data: {\n                postId: action.data,\n                userId: result.data.userId,\n            },\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LIKE_POST_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLikePost(){\n    yield takeLatest(LIKE_POST_REQUEST, likePost)\n}\n\n//////////////////////////////////////////// unlike post ////////////////////////////////////////////\nfunction unlikePostAPI(postId){\n    return axios.delete(`/post/${postId}/like`, {\n        withCredentials: true,\n    });\n}\n\nfunction* unlikePost(action){\n    try {\n        const result = yield call(unlikePostAPI, action.data);\n        yield put({\n            type: UNLIKE_POST_SUCCESS,\n            data: {\n                postId: action.data,\n                userId: result.data.userId,\n            },\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: UNLIKE_POST_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchUnlikePost(){\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost)\n}\n\n//////////////////////////////////////////// retweet ////////////////////////////////////////////\nfunction retweetAPI(postId){\n    return axios.post(`/post/${postId}/retweet`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* retweet(action){\n    try {\n        const result = yield call(retweetAPI, action.data);\n        yield put({\n            type: RETWEET_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: RETWEET_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchRetweet(){\n    yield takeLatest(RETWEET_REQUEST, retweet)\n}\n\nexport default function* postSaga(){\n    yield all([\n        fork(watchAddPost),\n        fork(watchAddComment),\n        fork(watchLoadComments),\n        fork(watchLoadMainPosts),\n        fork(watchLoadUserPosts),\n        fork(watchLoadHashtagPosts),\n        fork(watchUploadImages),\n        fork(watchLikePost),\n        fork(watchUnlikePost),\n        fork(watchRetweet),\n    ]);\n}"],"mappings":"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","sourceRoot":""}