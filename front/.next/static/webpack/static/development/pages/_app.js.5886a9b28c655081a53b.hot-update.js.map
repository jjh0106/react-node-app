{"version":3,"file":"static/webpack/static/development/pages/_app.js.5886a9b28c655081a53b.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signupRequestAction } from '../reducers/user';\n\n// custom hook\nexport const useInput = (initValue=null) => {\n    const [value, setter] = useState(initValue);\n    const handler = useCallback((e) => {\n        setter(e.target.value);\n    }, []);\n    return [value, handler];\n};\n\nconst Signup = () => {\n    const [id, onChageId] = useInput('');\n    const [nick, onChageNick] = useInput('');\n    const [password, onChagePassword] = useInput('');\n    const [passwordCheck, setPasswordCheck] = useState('');\n    const [term, setTerm] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [termError, setTermError] = useState(false);\n    const dispatch = useDispatch();\n    const { isSigningUp } = useSelector(state => state.user);\n\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        if(password !== passwordCheck){\n            return setPasswordError(true);\n        }\n        if(!term){\n            return setTermError(true);\n        }\n        dispatch(signupRequestAction({\n            id,\n            password,\n            nick\n        }));\n    }, [id, password, passwordCheck, nick, term]);\n\n    const onChagePasswordCheck = useCallback((e) => {\n        setPasswordError(e.target.value !== password);\n        setPasswordCheck(e.target.value);\n    }, [password]);\n\n    const onChangeTerm = useCallback((e) => {\n        setTermError(false);\n        setTerm(e.target.checked);\n    }, []);\n\n    return (\n        <Form onSubmit={onSubmit}>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <Input name=\"user-id\" required value={id} onChange={onChageId} />\n            </div>\n            <div>\n                <label htmlFor=\"user-nick\">닉네임</label>\n                <Input name=\"user-nick\" required value={nick} onChange={onChageNick} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <Input name=\"user-password\" type=\"password\" required value={password} onChange={onChagePassword} />\n            </div>\n            <div>\n                <label htmlFor=\"user-password-check\">비밀번호 체크</label>\n                <Input name=\"user-password-check\" type=\"password\" required value={passwordCheck} onChange={onChagePasswordCheck} />\n                { passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div> }\n            </div>\n            <div>\n                <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>약관 동의</Checkbox>   \n                { termError && <div style={{ color: 'red' }}>약관에 동의해 주시기 바랍니다.</div> } \n            </div>\n            <div>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp}>가입</Button>\n            </div>\n        </Form>\n    );\n};\n\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AATA;AASA;AAAA;AATA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}