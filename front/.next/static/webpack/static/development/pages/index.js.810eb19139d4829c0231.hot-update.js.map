{"version":3,"file":"static/webpack/static/development/pages/index.js.810eb19139d4829c0231.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n    const dispatch = useDispatch();\n    const [text, setText] = useState('');\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\n    const imageInput = useRef();\n\n    useEffect(() => {\n        setText('');\n    }, [postAdded === true])\n\n    const onSubmitForm = useCallback((e) => {\n        e.preventDefault();\n        if(!text || !text.trim()){\n            return alert('게시글을 작성해주세요.');\n        }\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                content: text,\n            }\n        });\n    }, [text]);\n\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, [])\n\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    const onChangeImage = useCallback((e) => {\n        const imageFormData = new FormData();\n        [].forEach.call(e.target.files, (f) => {\n            imageFormData.append('image', f);\n        })\n        dispatch({\n            type: UPLOAD_IMAGES_REQUEST,\n            data: imageFormData,\n        })\n    }, []);\n\n    return (\n        <Form encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n            <Input.TextArea maxLength={140} placeholder=\"일상을 적어주세요.\" value={text} onChange={onChangeText} />\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} onChange={onChangeImage} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => {\n                    return (\n                        <div key={v} style={{ display: 'inline-block' }}>\n                            <img src={`http://localhost:3000/${v}`} style={{ width: '200px' }} alt={v} />\n                            <div>\n                                <Button>제거</Button>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAIA;AACA;AACA;;;;A","sourceRoot":""}