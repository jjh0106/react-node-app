{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jsn/Desktop/react-node-app/front/components/PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport { Card, Icon, Button, Avatar } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar PostCard = function PostCard(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      commentText = _useState4[0],\n      setCommentText = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var dispatch = useDispatch();\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return React.createElement(Card, {\n    key: +post.createdAt,\n    cover: post.img && React.createElement(\"img\", {\n      alt: \"example\",\n      src: post.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }),\n    actions: [React.createElement(Icon, {\n      type: \"retweet\",\n      key: \"retweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"heart\",\n      key: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"message\",\n      key: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"ellipsis\",\n      key: \"ellipsis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })],\n    extra: React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Follow\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Card.Meta, {\n    avatar: React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/jsn/Desktop/react-node-app/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Icon","Button","Avatar","PropTypes","useSelector","useDispatch","PostCard","post","commentFormOpened","setCommentFormOpened","commentText","setCommentText","state","user","me","dispatch","onToggleComment","prev","createdAt","img","User","nickname","content","propTypes","shape","object","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,QAA2C,MAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACuBV,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,MACpBW,iBADoB;AAAA,MACDC,oBADC;;AAAA,mBAEWZ,QAAQ,CAAC,EAAD,CAFnB;AAAA;AAAA,MAEpBa,WAFoB;AAAA,MAEPC,cAFO;;AAAA,qBAGZP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHC;AAAA,MAGnBC,EAHmB,gBAGnBA,EAHmB;;AAI3B,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,MAAMW,eAAe,GAAGlB,WAAW,CAAC,YAAM;AACtCW,IAAAA,oBAAoB,CAAC,UAAAQ,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAApB;AACH,GAFkC,EAEhC,EAFgC,CAAnC;AAIA,SACI,oBAAC,IAAD;AACI,IAAA,GAAG,EAAE,CAACV,IAAI,CAACW,SADf;AAEI,IAAA,KAAK,EAAEX,IAAI,CAACY,GAAL,IAAY;AAAK,MAAA,GAAG,EAAC,SAAT;AAAmB,MAAA,GAAG,EAAEZ,IAAI,CAACY,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvB;AAGI,IAAA,OAAO,EAAE,CACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAEL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,GAAG,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,EAGL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,EAIL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,GAAG,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJK,CAHb;AASI,IAAA,KAAK,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASZ,IAAI,CAACa,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAT,CADZ;AAEI,IAAA,KAAK,EAAEd,IAAI,CAACa,IAAL,CAAUC,QAFrB;AAGI,IAAA,WAAW,EAAEd,IAAI,CAACe,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ;AAmBH,CA7BD;;AA+BAhB,QAAQ,CAACiB,SAAT,GAAqB;AACjBhB,EAAAA,IAAI,EAAEJ,SAAS,CAACqB,KAAV,CAAgB;AAClBJ,IAAAA,IAAI,EAAEjB,SAAS,CAACsB,MADE;AAElBH,IAAAA,OAAO,EAAEnB,SAAS,CAACuB,MAFD;AAGlBP,IAAAA,GAAG,EAAEhB,SAAS,CAACuB,MAHG;AAIlBR,IAAAA,SAAS,EAAEf,SAAS,CAACsB;AAJH,GAAhB;AADW,CAArB;AASA,eAAenB,QAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Icon, Button, Avatar } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst PostCard = ({ post }) => {\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const [commentText, setCommentText] = useState(''); \n    const { me } = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened(prev => !prev);\n    }, []);\n\n    return (\n        <Card\n            key={+post.createdAt}\n            cover={post.img && <img alt=\"example\" src={post.img} />}\n            actions={[\n                <Icon type=\"retweet\" key=\"retweet\" />,\n                <Icon type=\"heart\" key=\"heart\" />,\n                <Icon type=\"message\" key=\"message\" />,\n                <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n            ]}\n            extra={<Button>Follow</Button>}\n        >\n            <Card.Meta \n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                title={post.User.nickname}\n                description={post.content}\n            />\n        </Card>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        User: PropTypes.object,\n        content: PropTypes.string,\n        img: PropTypes.string,\n        createdAt: PropTypes.object,\n    }),\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}