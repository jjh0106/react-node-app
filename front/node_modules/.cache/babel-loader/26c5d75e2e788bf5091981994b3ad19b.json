{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logout),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogout),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signup),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignup),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport axios from 'axios';\nimport { takeLatest, takeEvery, all, fork, call, put, take, delay, race, cancel, throttle, select } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_FAILURE, LOG_OUT_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, SIGN_UP_SUCCESS, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, FOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST } from '../reducers/user'; //////////////////////////////////////////// login ////////////////////////////////////////////\n\nfunction loginAPI(data) {\n  return axios.post('/user/login/', data, {\n    withCredentials: true\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            // put은 dispatch와 동일.\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} //////////////////////////////////////////// logout ////////////////////////////////////////////\n\n\nfunction logoutAPI() {\n  return axios.post('/user/logout/', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logout() {\n  return _regeneratorRuntime.wrap(function logout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} //////////////////////////////////////////// signup ////////////////////////////////////////////\n\n\nfunction signupAPI(data) {\n  return axios.post('/user/', data);\n}\n\nfunction signup(action) {\n  return _regeneratorRuntime.wrap(function signup$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(signupAPI, action.data);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchSignup() {\n  return _regeneratorRuntime.wrap(function watchSignup$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signup);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} //////////////////////////////////////////// load user ////////////////////////////////////////////\n\n\nfunction loadUserAPI(userId) {\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var _result;\n\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          _result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_USER_SUCCESS,\n            data: _result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} //////////////////////////////////////////// follow ////////////////////////////////////////////\n\n\nfunction followAPI(userId) {\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var _result2;\n\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          _result2 = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: FOLLOW_USER_SUCCESS,\n            data: _result2.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n} //////////////////////////////////////////// follow ////////////////////////////////////////////\n\n\nfunction unfollowAPI(userId) {\n  return axios.delete(\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var _result3;\n\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          _result3 = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: UNFOLLOW_USER_SUCCESS,\n            data: _result3.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.log(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n} //////////////////////////////////////////// load followers ////////////////////////////////////////////\n\n\nfunction loadFollowersAPI(userId) {\n  return axios.get(\"/user/\".concat(userId, \"/followers\"), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var _result4;\n\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          _result4 = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: _result4.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.log(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchLogin), fork(watchLogout), fork(watchSignup), fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n} // take: 해당 액션이 디스패치되면 제너레이터를 next하는 이펙트(해당 액션을 기다리다가 yield를 풀어준다.)\n// 서버에 동시에 두 요청 이상이 발생했을 때, 모두 허용할 것인가(takeEvery) 아니면 마지막 것만 허용할 것인가 차이(takeLatest)  \n// call은 동기호출, fork는 비동기호출 -- API를 요청 후 응답을 받고 다음 행동을  취하기 위해서는 call로 응답을 대기한다.","map":{"version":3,"sources":["/Users/jsn/Desktop/react-node-app/front/sagas/user.js"],"names":["login","watchLogin","logout","watchLogout","signup","watchSignup","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","userSaga","axios","takeLatest","takeEvery","all","fork","call","put","take","delay","race","cancel","throttle","select","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","loginAPI","data","post","withCredentials","action","result","type","console","error","logoutAPI","log","signupAPI","loadUserAPI","userId","get","me","followAPI","unfollowAPI","delete","loadFollowersAPI","watchLoadFollowings","watchRemoveFollower"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { takeLatest, takeEvery, all, fork, call, put, take, delay, race, cancel, throttle, select } from 'redux-saga/effects';\nimport { \n    LOG_IN_REQUEST, \n    LOG_IN_SUCCESS,\n    LOG_IN_FAILURE,\n    LOG_OUT_REQUEST,\n    LOG_OUT_FAILURE,\n    LOG_OUT_SUCCESS,\n    SIGN_UP_REQUEST,\n    SIGN_UP_FAILURE,\n    SIGN_UP_SUCCESS,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAILURE,\n    LOAD_USER_REQUEST,\n    FOLLOW_USER_SUCCESS,\n    FOLLOW_USER_FAILURE,\n    FOLLOW_USER_REQUEST,\n    UNFOLLOW_USER_SUCCESS,\n    UNFOLLOW_USER_FAILURE,\n    UNFOLLOW_USER_REQUEST,\n    LOAD_FOLLOWERS_SUCCESS,\n    LOAD_FOLLOWERS_FAILURE,\n    LOAD_FOLLOWERS_REQUEST,\n } from '../reducers/user';\n\n //////////////////////////////////////////// login ////////////////////////////////////////////\nfunction loginAPI(data){\n    return axios.post('/user/login/', data, {\n        withCredentials: true,\n    });\n}\n\nfunction* login(action){\n    try {\n        const result = yield call(loginAPI, action.data);\n        yield put({ // put은 dispatch와 동일.\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOG_IN_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN_REQUEST, login)\n}\n\n//////////////////////////////////////////// logout ////////////////////////////////////////////\nfunction logoutAPI(){\n    return axios.post('/user/logout/', {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* logout(){\n    try {\n        yield call(logoutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOG_OUT_FAILURE,\n        });\n    }\n}\n\nfunction* watchLogout(){\n    yield takeLatest(LOG_OUT_REQUEST, logout)\n}\n\n//////////////////////////////////////////// signup ////////////////////////////////////////////\nfunction signupAPI(data){\n    return axios.post('/user/', data);\n}\n\nfunction* signup(action){ \n    try {\n        yield call(signupAPI, action.data); // action.data에는 컴포넌트에서 디스패치한 userId, password, nickname가 들어있다.\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchSignup(){\n    yield takeLatest(SIGN_UP_REQUEST, signup)\n}\n\n//////////////////////////////////////////// load user ////////////////////////////////////////////\nfunction loadUserAPI(userId){\n    return axios.get( userId ? `/user/${userId}` : '/user/', {\n        withCredentials: true,\n    });\n}\n\nfunction* loadUser(action){ \n    try {\n        const result = yield call(loadUserAPI, action.data); \n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadUser(){\n    yield takeEvery(LOAD_USER_REQUEST, loadUser)\n}\n\n//////////////////////////////////////////// follow ////////////////////////////////////////////\nfunction followAPI(userId){\n    return axios.post(`/user/${userId}/follow`, {}, {\n        withCredentials: true,\n    });\n}\n\nfunction* follow(action){\n    try {\n        const result = yield call(followAPI, action.data);\n        yield put({\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: FOLLOW_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchFollow(){\n    yield takeLatest(FOLLOW_USER_REQUEST, follow)\n}\n\n//////////////////////////////////////////// follow ////////////////////////////////////////////\nfunction unfollowAPI(userId){\n    return axios.delete(`/user/${userId}/follow`, {\n        withCredentials: true,\n    });\n}\n\nfunction* unfollow(action){\n    try {\n        const result = yield call(unfollowAPI, action.data);\n        yield put({\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchUnfollow(){\n    yield takeLatest(UNFOLLOW_USER_REQUEST, unfollow)\n}\n\n//////////////////////////////////////////// load followers ////////////////////////////////////////////\nfunction loadFollowersAPI(userId){\n    return axios.get(`/user/${userId}/followers`, {\n        withCredentials: true,\n    });\n}\n\nfunction* loadFollowers(action){\n    try {\n        const result = yield call(loadFollowersAPI, action.data);\n        yield put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data,\n        });\n    } catch(e) {\n        console.log(e);\n        yield put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: e,\n        });\n    }\n}\n\nfunction* watchLoadFollowers(){\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers)\n}\n\nexport default function* userSaga(){\n    yield all([\n        fork(watchLogin),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchLoadUser),\n        fork(watchFollow),\n        fork(watchUnfollow),\n        fork(watchLoadFollowers),\n        fork(watchLoadFollowings),\n        fork(watchRemoveFollower),\n    ]);\n}\n\n// take: 해당 액션이 디스패치되면 제너레이터를 next하는 이펙트(해당 액션을 기다리다가 yield를 풀어준다.)\n// 서버에 동시에 두 요청 이상이 발생했을 때, 모두 허용할 것인가(takeEvery) 아니면 마지막 것만 허용할 것인가 차이(takeLatest)  \n// call은 동기호출, fork는 비동기호출 -- API를 요청 후 응답을 받고 다음 행동을  취하기 위해서는 call로 응답을 대기한다."]},"metadata":{},"sourceType":"module"}