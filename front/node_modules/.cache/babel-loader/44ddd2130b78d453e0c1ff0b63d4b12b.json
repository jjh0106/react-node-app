{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\n\nvar JsnBird = function JsnBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(Head, null, React.createElement(\"title\", null, \"JsnBird\"), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/antd/3.19.0/antd.css\"\n  }), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    charset: \"UTF-8\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\"\n  }), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    type: \"text/css\",\n    href: \"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\"\n  })), React.createElement(AppLayout, null, \" \", React.createElement(Component, pageProps)));\n};\n\nJsnBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\n\nJsnBird.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps, state, cookie;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n            state = ctx.store.getState();\n            cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n            axios.defaults.headers.Cookie = '';\n\n            if (ctx.isServer && cookie) {\n              axios.defaults.headers.Cookie = cookie;\n            }\n\n            if (!state.user.me) {\n              ctx.store.dispatch({\n                type: LOAD_USER_REQUEST\n              });\n            }\n\n            if (!Component.getInitialProps) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 10;\n            return Component.getInitialProps(ctx);\n\n          case 10:\n            pageProps = _context.sent;\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(JsnBird));","map":{"version":3,"sources":["/Users/jsn/Desktop/react-node-app/front/pages/_app.js"],"names":["React","Head","PropTypes","AppLayout","withRedux","withReduxSaga","Provider","createStore","compose","applyMiddleware","createSagaMiddleware","reducer","rootSaga","LOAD_USER_REQUEST","axios","JsnBird","Component","store","pageProps","propTypes","elementType","isRequired","object","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\n\nconst JsnBird = ({ Component, store, pageProps }) => {\n    return (\n        <Provider store={store}>\n            <Head>\n                <title>JsnBird</title>\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.19.0/antd.css\" />\n                <link rel=\"stylesheet\" type=\"text/css\" charset=\"UTF-8\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css\" />\n                <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css\" />\n            </Head>\n            <AppLayout> {/* props로 하위 jsx를 전달 */}\n                <Component {...pageProps} />\n            </AppLayout>                \n        </Provider>\n    );\n};\n\nJsnBird.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n    store: PropTypes.object.isRequired,\n    pageProps: PropTypes.object.isRequired,\n};\n\nJsnBird.getInitialProps = async (context) => {\n    const { ctx, Component } = context;\n    let pageProps = {};\n    const state = ctx.store.getState();\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n\n    axios.defaults.headers.Cookie = '';\n\n    if(ctx.isServer && cookie){\n        axios.defaults.headers.Cookie = cookie;\n    }\n\n    if( !state.user.me ){\n        ctx.store.dispatch({\n            type: LOAD_USER_REQUEST,\n        })\n    }\n\n    if( Component.getInitialProps ){\n        pageProps = await Component.getInitialProps(ctx);\n    }\n    \n    return { pageProps };\n};\n\nconst configureStore = (initialState, options) => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer = process.env.NODE_ENV === 'production' \n        ? compose(applyMiddleware(...middlewares))\n        : compose(\n            applyMiddleware(...middlewares),\n            !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n        ); \n    const store = createStore(reducer, initialState, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(JsnBird));"]},"metadata":{},"sourceType":"module"}