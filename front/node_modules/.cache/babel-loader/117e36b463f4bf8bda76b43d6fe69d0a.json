{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { EDIT_NICKNAME_REQUEST } from '../reducers/user';\n\nvar NicknameEditForm = function NicknameEditForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      editName = _useState2[0],\n      setEditName = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      isEditingNickname = _useSelector.isEditingNickname;\n\n  var dispatch = useDispatch();\n  var onChangeNickname = useCallback(function (e) {\n    setEditName(e.target.value);\n  }, []);\n  var onEditNickname = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: EDIT_NICKNAME_REQUEST,\n      data: editName\n    });\n  }, [editName]);\n  return React.createElement(Form, {\n    style: {\n      marginBottom: '20px',\n      border: '1px solid #d9d9d9',\n      padding: '20px'\n    },\n    onSubmit: onEditNickname\n  }, React.createElement(Input, {\n    addonBefore: \"\\uB2C9\\uB124\\uC784\",\n    value: editName || me && me.nickname,\n    onChange: onChangeNickname\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isEditingNickname\n  }, \"\\uC218\\uC815\"));\n};\n\nexport default NicknameEditForm;","map":{"version":3,"sources":["/Users/jsn/Desktop/react-node-app/front/components/NicknameEditForm.js"],"names":["React","useCallback","useState","useSelector","useDispatch","Form","Input","Button","EDIT_NICKNAME_REQUEST","NicknameEditForm","editName","setEditName","state","user","me","isEditingNickname","dispatch","onChangeNickname","e","target","value","onEditNickname","preventDefault","type","data","marginBottom","border","padding","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACKP,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACpBQ,QADoB;AAAA,MACVC,WADU;;AAAA,qBAEOR,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFlB;AAAA,MAEnBC,EAFmB,gBAEnBA,EAFmB;AAAA,MAEfC,iBAFe,gBAEfA,iBAFe;;AAG3B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,MAAMa,gBAAgB,GAAGhB,WAAW,CAAC,UAACiB,CAAD,EAAO;AACxCP,IAAAA,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFmC,EAEjC,EAFiC,CAApC;AAIA,MAAMC,cAAc,GAAGpB,WAAW,CAAC,UAACiB,CAAD,EAAO;AACtCA,IAAAA,CAAC,CAACI,cAAF;AACAN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEf,qBADD;AAELgB,MAAAA,IAAI,EAAEd;AAFD,KAAD,CAAR;AAIH,GANiC,EAM/B,CAACA,QAAD,CAN+B,CAAlC;AAQA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEe,MAAAA,YAAY,EAAE,MAAhB;AAAwBC,MAAAA,MAAM,EAAE,mBAAhC;AAAqDC,MAAAA,OAAO,EAAE;AAA9D,KAAb;AAAqF,IAAA,QAAQ,EAAEN;AAA/F,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,oBAAnB;AAAyB,IAAA,KAAK,EAAEX,QAAQ,IAAKI,EAAE,IAAIA,EAAE,CAACc,QAAtD;AAAiE,IAAA,QAAQ,EAAEX;AAA3E,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAEF;AAAlD,oBAFJ,CADJ;AAMH,CAvBD;;AAyBA,eAAeN,gBAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { EDIT_NICKNAME_REQUEST } from '../reducers/user';\n\nconst NicknameEditForm = () => {\n    const [editName, setEditName] = useState('');\n    const { me, isEditingNickname } = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    const onChangeNickname = useCallback((e) => {\n        setEditName(e.target.value);\n    }, []);\n\n    const onEditNickname = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: EDIT_NICKNAME_REQUEST,\n            data: editName,\n        })\n    }, [editName]);\n\n    return (\n        <Form style={{ marginBottom: '20px', border: '1px solid #d9d9d9', padding: '20px' }} onSubmit={onEditNickname}>\n            <Input addonBefore=\"닉네임\" value={editName || (me && me.nickname)} onChange={onChangeNickname} />\n            <Button type=\"primary\" htmlType=\"submit\" loading={isEditingNickname}>수정</Button>\n        </Form>\n    );\n};\n\nexport default NicknameEditForm;"]},"metadata":{},"sourceType":"module"}