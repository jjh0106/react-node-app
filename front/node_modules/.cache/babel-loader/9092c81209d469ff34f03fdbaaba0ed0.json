{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jsn/Desktop/react-node-app/front/components/PostForm.js\";\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    setText('');\n  }, [postAdded === true]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  return React.createElement(Form, {\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC77C\\uC0C1\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, imagePaths.map(function (v, i) {\n    return React.createElement(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"http://localhost:3000/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/jsn/Desktop/react-node-app/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n    const dispatch = useDispatch();\n    const [text, setText] = useState('');\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\n\n    useEffect(() => {\n        setText('');\n    }, [postAdded === true])\n\n    const onSubmitForm = useCallback((e) => {\n        e.preventDefault();\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: {\n                text,\n            }\n        });\n    }, [])\n\n    const onChangeText = useCallback((e) => {\n        setText(e.target.value);\n    }, [])\n\n    return (\n        <Form encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n            <Input.TextArea maxLength={140} placeholder=\"일상을 적어주세요.\" value={text} onChange={onChangeText} />\n            <div>\n                <input type=\"file\" multiple hidden />\n                <Button>이미지 업로드</Button>\n                <Button type=\"primary\" htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\n            </div>\n            <div>\n                {imagePaths.map((v, i) => {\n                    return (\n                        <div key={v} style={{ display: 'inline-block' }}>\n                            <img src={`http://localhost:3000/${v}`} style={{ width: '200px' }} alt={v} />\n                            <div>\n                                <Button>제거</Button>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}