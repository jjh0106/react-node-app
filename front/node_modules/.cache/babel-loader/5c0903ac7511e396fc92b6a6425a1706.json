{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useCallback } from 'react';\nimport { Button, List, Card, Icon } from 'antd';\nimport { useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nvar Profile = function Profile() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts;\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  return React.createElement(\"div\", null, React.createElement(NicknameEditForm, null), React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\"),\n    loadMore: React.createElement(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followingList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onUnfollow(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(List, {\n    style: {\n      marginBottom: '20px'\n    },\n    grid: {\n      gutter: 4,\n      xs: 2,\n      md: 3\n    },\n    size: \"small\",\n    header: React.createElement(\"div\", null, \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\"),\n    loadMore: React.createElement(Button, {\n      style: {\n        width: '100%'\n      }\n    }, \"\\uB354 \\uBCF4\\uAE30\"),\n    bordered: true,\n    dataSource: followerList,\n    renderItem: function renderItem(item) {\n      return React.createElement(List.Item, {\n        style: {\n          marginTop: '20px'\n        }\n      }, React.createElement(Card, {\n        actions: [React.createElement(Icon, {\n          key: \"stop\",\n          type: \"stop\",\n          onClick: onRemoveFollower(item.id)\n        })]\n      }, React.createElement(Card.Meta, {\n        description: item.nickname\n      })));\n    }\n  }), React.createElement(\"div\", null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  })));\n};\n\nProfile.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var _context$store, dispatch, getState;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context$store = context.store, dispatch = _context$store.dispatch, getState = _context$store.getState;\n            dispatch({\n              type: LOAD_FOLLOWERS_REQUEST,\n              data: getState.user && getState.user.me.id\n            });\n            dispatch({\n              type: LOAD_FOLLOWINGS_REQUEST,\n              data: getState.user && getState.user.me.id\n            });\n            dispatch({\n              type: LOAD_USER_POSTS_REQUEST,\n              data: getState.user && getState.user.me.id\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Profile;","map":{"version":3,"sources":["/Users/jsn/Desktop/react-node-app/front/pages/profile.js"],"names":["React","useCallback","Button","List","Card","Icon","useSelector","NicknameEditForm","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWINGS_REQUEST","UNFOLLOW_USER_REQUEST","REMOVE_FOLLOWER_REQUEST","LOAD_USER_POSTS_REQUEST","Profile","state","user","followingList","followerList","post","mainPosts","onUnfollow","userId","dispatch","type","data","onRemoveFollower","marginBottom","gutter","xs","md","width","item","marginTop","id","nickname","map","c","createdAt","getInitialProps","context","store","getState","me"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button, List, Card, Icon } from 'antd';\nimport { useSelector } from 'react-redux';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\n\nconst Profile = () => {\n    const { followingList, followerList } = useSelector(state => state.user);\n    const { mainPosts } = useSelector(state => state.post);\n\n    const onUnfollow = useCallback(userId => () => {\n        dispatch({\n            type: UNFOLLOW_USER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    const onRemoveFollower = useCallback(userId => () => {\n        dispatch({\n            type: REMOVE_FOLLOWER_REQUEST,\n            data: userId,\n        });\n    }, []);\n\n    return (\n        <div>\n            <NicknameEditForm />  \n            <List \n                style={{ marginBottom: '20px' }}\n                grid={{ gutter: 4, xs: 2, md: 3 }}\n                size='small'\n                header={<div>팔로잉 목록</div>}\n                loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\n                bordered\n                dataSource={followingList}\n                renderItem={item => (\n                    <List.Item style={{ marginTop: '20px' }}>\n                        <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onUnfollow(item.id)} />]}>\n                            <Card.Meta description={item.nickname} />\n                        </Card>    \n                    </List.Item>   \n                )}\n            />        \n            <List \n                style={{ marginBottom: '20px' }}\n                grid={{ gutter: 4, xs: 2, md: 3 }}\n                size='small'\n                header={<div>팔로워 목록</div>}\n                loadMore={<Button style={{ width: '100%' }}>더 보기</Button>}\n                bordered\n                dataSource={followerList}\n                renderItem={item => (\n                    <List.Item style={{ marginTop: '20px' }}>\n                        <Card actions={[<Icon key=\"stop\" type=\"stop\" onClick={onRemoveFollower(item.id)} />]}>\n                            <Card.Meta description={item.nickname} />\n                        </Card>    \n                    </List.Item>   \n                )}\n            />     \n            <div>\n                {mainPosts.map(c => (\n                    <PostCard key={+c.createdAt} post={c} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nProfile.getInitialProps = async(context) => {\n    const { dispatch, getState } = context.store;\n\n    dispatch({\n        type: LOAD_FOLLOWERS_REQUEST,\n        data: getState.user && getState.user.me.id,\n    });\n    dispatch({\n        type: LOAD_FOLLOWINGS_REQUEST,\n        data: getState.user && getState.user.me.id,\n    });\n    dispatch({\n        type: LOAD_USER_POSTS_REQUEST,\n        data: getState.user && getState.user.me.id,\n    });\n};\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}